#!/bin/zsh

function my_name()
 {
  	whoami
 }

function my_disk_space()
 {
     #Base variables for disk space
     totalSpace=2451100000
     osSize=157600000
     realSpace=$(( totalSpace-osSize ))
     #use du and awk to get sum of of all files from the first column
     #du output
     #pass the real available space variable to awk using -v
     #print out available space, total disk space used and the disk size
     du ~ | awk -v total="$realSpace" '{sum+=$1} END{avail=total-sum;print "available_space:",avail;
     	       	      			 	   print "used_space:",sum; print "total_disk_space:",total}'
 }

#search your list of last commands
function hg() {
    history | grep "$1"
}



#make a script executable
#755 makes executable
#$1 is filename
function makeExec() {
    chmod 755 $1	 
}


function getFileType(){

    #returns the file extension                                               
    #by finding the index of the                                              
    #period
    echo ${1:${1[(i).?]}}
}


function getShebang(){

    #get the filetype of the argument
    aType=$(getFileType $1)

    #shebangs for the array
    shShebang='#!/bin/zsh'
    pyShebang='#!/usr/bin/python3'
    zunitShebang="#!/usr/bin/env zunit"

    #array containing file types for the shebang
    typeset -A fTypes=(py $pyShebang sh $shShebang zunit $zunitShebang)

    #index the array with the type
    echo ${fTypes[$aType]}
}


function newScript() {

    # create the shebang
    shebang=$(getShebang $1)

    #create the file and append the shebang to the new file
    touch $1 && echo $shebang >> $1

    #if the file exists, make it executable
    if [[ -e $1 ]];then
	makeExec $1
    fi
    #open the file in emacs
    emacs $1
}

function lowerCaseNoSpace(){

    # read input
    # use L flag to make all characters lowercase
    # use tr to remove any spaces
    read n;  echo ${(L)n} | tr -d " "

}

function mkd(){

    # make new directory and cd into it
    mkdir -p $1 && cd $1
}


# create a new public repo
function newPubRepo(){
    gh repo create $1 --public --source=. --remote=upstream --push 
}







