;; orgmode keybindings
(global-set-key (kbd "C-c l") #'org-store-link)
(global-set-key (kbd "C-c a") #'org-agenda)
(global-set-key (kbd "C-c c") #'org-capture)

;; where to get packages
(setq package-enable-at-startup nil)

(setq package-archives '(("ELPA"  . "http://tromey.com/elpa/")
			   ("gnu"   . "http://elpa.gnu.org/packages/")
			   ("melpa" . "https://melpa.org/packages/")))
(package-initialize)

;; use package
(straight-use-package 'use-package)
(require 'use-package)
(setq straight-use-package-by-default t)
(require 'use-package-ensure)
(setq use-package-always-ensure t)

;; remove menu bar
(scroll-bar-mode -1)

(use-package highlight-parentheses
  :defer t
  :hook (prog-mode . highlight-parentheses-mode))


(use-package smartparens
  :hook (prog-mode . smartparens-mode)
  :defer t
  :config
	 (sp-local-pair 'emacs-lisp-mode "'" :nil :actions nil))

;; org-babel support
(require 'ob-lisp)

(add-hook 'org-mode-hook #'org-indent-mode)
(add-hook 'org-mode-hook #'visual-line-mode)
(setq org-adapt-indentation nil)

(use-package pomodoro
  :config
  (pomodoro-add-to-mode-line))

(use-package page-break-lines)

(use-package dashboard
  :after (page-break-lines)
  :custom
  (dashboard-items '((recents . 10)
                     (agenda . 10)
                     (bookmarks . 5)))
  :config
  (setq initial-buffer-choice (lambda () (get-buffer "*dashboard*")))
  (setq inhibit-start-message t)
  (dashboard-setup-startup-hook))
	 
